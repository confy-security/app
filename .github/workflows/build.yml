name: Build

on:
  push:
    tags:
      - '*'

concurrency:
  group: ${{ github.workflow}}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  FORCE_COLOR: "1"

defaults:
  run:
    shell: bash

jobs:
  generate_changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v5
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3'
      
      - name: Install github_changelog_generator
        run: gem install github_changelog_generator

      - name: Generate Changelog
        run: |
          git fetch --tags --force
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          github_changelog_generator -u confy-security -p app --since-tag $latest_tag
        env:
          CHANGELOG_GITHUB_TOKEN: ${{ secrets.CHANGELOG_GITHUB_TOKEN }}
      
      - name: Upload CHANGELOG file
        uses: actions/upload-artifact@v5
        with:
          name: CHANGELOG
          path: CHANGELOG.md

  build-and-package:
    name: Package
    runs-on: ${{ matrix.runs-on }}
    permissions:
      contents: write
      packages: write
      actions: write
      discussions: write
    strategy:
      fail-fast: false
      matrix:
        target: [ "Flatpak", "AppImage", "Archlinux", "Ubuntu", "Fedora", "Opensuse", "Windows" ]
        include:
          - target: "AppImage"
            platform: "linux"
            output-format: "appimage"
            runs-on: "ubuntu-latest"

          - target: "Flatpak"
            platform: "linux"
            output-format: "flatpak"
            runs-on: "ubuntu-latest"

          - target: "Archlinux"
            platform: "linux"
            output-format: "system"
            runs-on: "ubuntu-latest"
            briefcase-args: "--target archlinux"

          - target: "Ubuntu"
            platform: "linux"
            output-format: "system"
            runs-on: "ubuntu-latest"
            briefcase-args: "--target ubuntu:24.04"

          - target: "Fedora"
            platform: "linux"
            output-format: "system"
            runs-on: "ubuntu-latest"
            briefcase-args: "--target fedora:40"

          - target: "Opensuse"
            platform: "linux"
            output-format: "system"
            runs-on: "ubuntu-latest"
            briefcase-args: "--target opensuse/tumbleweed"

          - target: "Windows"
            platform: "windows"
            output-format: "app"
            runs-on: "windows-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.13.7"

      - name: Install flatpak
        if: matrix.target == 'Flatpak'
        run: sudo apt install flatpak flatpak-builder

      - name: Install Briefcase
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install briefcase

      - name: Build App
        run: |
          briefcase build \
            ${{ matrix.platform || matrix.target }} \
            ${{ matrix.output-format }} \
            --test --no-input --log \
            ${{ matrix.briefcase-args }}

      - name: Package App
        run: |
          briefcase package \
            ${{ matrix.platform || matrix.target }} \
            ${{ matrix.output-format }} \
            --update --adhoc-sign --no-input --log \
            ${{ matrix.briefcase-args }}

      - name: Upload App
        uses: actions/upload-artifact@v5
        with:
          name: confy-${{ matrix.target }}
          path: dist
          if-no-files-found: error

      - name: Upload Log
        if: failure()
        uses: actions/upload-artifact@v5
        with:
          name: Log-Failure-${{ matrix.target }}
          path: logs/*
      
      - name: Download CHANGELOG artifact
        uses: actions/download-artifact@v5
        with:
          name: CHANGELOG
          path: .

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: false # Definir como falso se não for uma versão de pré-lançamento
          body_path: ./CHANGELOG.md
          files: |
            dist/*